{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/config.js","webpack:///./src/libs/babel.js","webpack:///external \"@babel/parser\"","webpack:///external \"@babel/traverse\"","webpack:///./src/utils.js","webpack:///external \"typescript\"","webpack:///./src/libs/fs.js","webpack:///external \"fs\"","webpack:///./src/libs/path.js","webpack:///external \"path\"","webpack:///./src/visitor.js","webpack:///external \"@babel/types\""],"names":["gqlExtensions","jsExtensions","supportedExtensions","toString","join","gqlPluckFromFile","filePath","options","String","TypeError","fileExt","extname","includes","fs","readFile","encoding","Object","resolve","process","cwd","useSync","code","readFileSync","config","Config","gqlPluckFromCodeString","then","sync","out","ast","babel","parse","visitor","createVisitor","_options","traverse","returnValue","fromFile","fromCodeString","plugins","decoratorsBeforeExport","proposal","flowPlugins","all","dynamicFlowPlugins","test","push","assign","sourceType","allowUndeclaredExports","babelTraverse","ts","require","e","Error","freeText","transpileModule","compilerOptions","target","ScriptTarget","ES2018","jsx","outputText","slice","tsIndex","indexOf","splice","babelParse","text","Array","replace","match","baseIndent","content","split","map","line","lines","minIndent","filter","trim","reduce","currIndent","length","Infinity","splitWords","str","toUpperFirst","substr","toUpperCase","toLowerCase","toCamelCase","words","first","shift","rest","writeFileSync","args","Promise","reject","err","writeFile","path","partials","ext","pop","defaults","modules","name","identifier","gqlMagicComment","globalGqlIdentifierName","mod","definedIdentifierNames","gqlTemplateLiterals","isValidPackage","some","pkg","isValidIdentifier","id","pluckStringFromFile","start","end","pluckMagicTemplateLiteral","node","takeExpression","leadingComments","leadingComment","leadingCommentValue","value","gqlTemplateLiteral","expression","CallExpression","enter","callee","arguments","t","parent","arg0","ImportDeclaration","source","moduleNode","find","gqlImportSpecifier","specifiers","importSpecifier","imported","local","ExpressionStatement","exit","TemplateLiteral","TaggedTemplateExpression","tag","quasi"],"mappings":"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","file":"graphql-tag-pluck.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import Config from './config'\nimport babel from './libs/babel'\nimport fs from './libs/fs'\nimport { resolve, extname } from './libs/path'\nimport createVisitor from './visitor'\n\nconst gqlExtensions = [\n  '.graphqls', '.graphql', '.gqls', '.gql'\n]\n\nconst jsExtensions = [\n  '.js', '.jsx', '.ts', '.tsx', '.flow', '.flow.js', '.flow.jsx'\n]\n\nconst supportedExtensions = [...gqlExtensions, ...jsExtensions]\n\nsupportedExtensions.toString = function toString() {\n  return this.join(', ')\n}\n\nexport const gqlPluckFromFile = (filePath, options = {}) => {\n  if (typeof filePath != 'string' && !(filePath instanceof String)) {\n    throw TypeError('Provided file path must be a string')\n  }\n\n  const fileExt = extname(filePath)\n\n  if (!supportedExtensions.includes(fileExt)) {\n    throw TypeError(`Provided file type must be one of ${supportedExtensions}`)\n  }\n\n  if (gqlExtensions.includes(fileExt)) {\n    return fs.readFile(filePath, { encoding: 'utf8' })\n  }\n\n  if (!(options instanceof Object)) {\n    throw TypeError(`Options arg must be an object`)\n  }\n\n  filePath = resolve(process.cwd(), filePath)\n  options = { ...options, fileExt }\n\n  if (options.useSync) {\n    const code = fs.readFileSync(filePath, { encoding: 'utf8' })\n    const config = new Config(code, options)\n\n    return gqlPluckFromCodeString(code, config)\n  }\n\n  return fs.readFile(filePath, { encoding: 'utf8' }).then((code) => {\n    const config = new Config(code, options)\n    return gqlPluckFromCodeString(code, config)\n  })\n}\n\ngqlPluckFromFile.sync = (filePath, options = {}) => {\n  options = { ...options, useSync: true }\n\n  return gqlPluckFromFile(filePath, options)\n}\n\nexport const gqlPluckFromCodeString = (code, options = {}) => {\n  if (typeof code != 'string' && !(code instanceof String)) {\n    throw TypeError('Provided code must be a string')\n  }\n\n  if (!(options instanceof Object)) {\n    throw TypeError(`Options arg must be an object`)\n  }\n\n  if (options.fileExt) {\n    if (gqlExtensions.includes(options.fileExt)) {\n      return code\n    }\n\n    if (!jsExtensions.includes(options.fileExt)) {\n      throw TypeError(`options.fileExt must be one of ${supportedExtensions}`)\n    }\n  }\n\n  const out = {}\n  const config = new Config(code, options)\n  const ast = babel.parse(code, config)\n  const visitor = createVisitor(ast.code, out, config._options)\n\n  babel.traverse(ast, visitor)\n\n  return out.returnValue\n}\n\nexport default {\n  fromFile: gqlPluckFromFile,\n  fromCodeString: gqlPluckFromCodeString,\n}\n","export default function Config(code, options) {\n  if (options instanceof Config) {\n    return options\n  }\n\n  const plugins = [\n    'asyncGenerators',\n    'bigInt',\n    'classProperties',\n    'classPrivateProperties',\n    'classPrivateMethods',\n    ['decorators', { decoratorsBeforeExport: true }],\n    'doExpressions',\n    'dynamicImport',\n    'exportDefaultFrom',\n    'exportNamespaceFrom',\n    'functionBind',\n    'functionSent',\n    'importMeta',\n    'logicalAssignment',\n    'nullishCoalescingOperator',\n    'numericSeparator',\n    'objectRestSpread',\n    'optionalCatchBinding',\n    'optionalChaining',\n    ['pipelineOperator', { proposal: 'smart' }],\n    'throwExpressions',\n  ]\n\n  // { all: true } option is bullshit thus I do it manually, just in case\n  // I still specify it\n  const flowPlugins = [['flow', { all: true }], 'flowComments']\n\n  // If line has @flow header, include flow plug-ins\n  const dynamicFlowPlugins = (\n    /^\\/\\/ *@flow *\\n/.test(code) ||\n    /^\\/\\* *@flow *\\*\\/ *\\n/.test(code)\n  ) ? flowPlugins : []\n\n  switch (options.fileExt) {\n    case '.ts': plugins.push('typescript'); break\n    case '.tsx': plugins.push('typescript', 'jsx'); break\n    // Adding .jsx extension by default because it doesn't affect other syntax features\n    // (unlike .tsx) and because people are seem to use it with regular file extensions\n    // (e.g. .js) see https://github.com/dotansimha/graphql-code-generator/issues/1967\n    case '.js': plugins.push('jsx', ...dynamicFlowPlugins); break\n    case '.jsx': plugins.push('jsx', ...dynamicFlowPlugins); break\n    case '.flow.js': plugins.push('jsx', ...flowPlugins); break\n    case '.flow.jsx': plugins.push('jsx', ...flowPlugins); break\n    case '.flow': plugins.push('jsx', ...flowPlugins); break\n    default: plugins.push('jsx', ...dynamicFlowPlugins); break\n  }\n\n  // The _options filed will be used to retrieve the original options.\n  // Useful when we wanna get not config related options later on\n  return Object.assign(this, {\n    _options: options,\n    sourceType: 'module',\n    plugins,\n    allowUndeclaredExports: true,\n  })\n}\n","import { parse as babelParse } from '@babel/parser'\nimport babelTraverse from '@babel/traverse'\nimport { freeText } from '../utils'\n\nexport const traverse = babelTraverse\n\nexport const parse = (code, config) => {\n  // The 'typescript' plug-in has few bugs... It's just better to use the native one\n  // even though it affects performance\n  if (config.plugins.includes('typescript')) {\n    let ts\n    try {\n      ts = require('typescript')\n    }\n    catch (e) {\n      throw Error(freeText(`\n        GraphQL template literals cannot be plucked from a TypeScript code without having the \"typescript\" package installed.\n        Please install it and try again.\n\n        Via NPM:\n\n            $ npm install typescript\n\n        Via Yarn:\n\n            $ yarn add typescript\n      `))\n    }\n\n    code = ts.transpileModule(code, {\n      compilerOptions: {\n        target: ts.ScriptTarget.ES2018,\n        // \"preserve\" mode would be more correct, but it will keep not transpile generic\n        // React.Components which are provided with null or undefined e.g. <Foo<undefined />>\n        jsx: config.plugins.includes('jsx') && 'react',\n      }\n    }).outputText\n\n    const plugins = config.plugins.slice()\n    const tsIndex = plugins.indexOf('typescript')\n    plugins.splice(tsIndex, 1)\n\n    config = { ...config, plugins }\n  }\n\n  const ast = babelParse(code, config)\n  // Necessary to get the original code in case it was transformed by TypeScript\n  ast.code = code\n\n  return ast\n}\n\nexport default {\n  traverse,\n  parse,\n}\n","module.exports = require(\"@babel/parser\");","module.exports = require(\"@babel/traverse\");","// Will use the shortest indention as an axis\nexport const freeText = (text) => {\n  if (text instanceof Array) {\n    text = text.join('')\n  }\n\n  // This will allow inline text generation with external functions, same as ctrl+shift+c\n  // As long as we surround the inline text with ==>text<==\n  text = text.replace(\n    /( *)==>((?:.|\\n)*?)<==/g,\n    (match, baseIndent, content) =>\n  {\n    return content\n      .split('\\n')\n      .map(line => `${baseIndent}${line}`)\n      .join('\\n')\n  })\n\n  const lines = text.split('\\n')\n\n  const minIndent = lines.filter(line => line.trim()).reduce((minIndent, line) => {\n    const currIndent = line.match(/^ */)[0].length\n\n    return currIndent < minIndent ? currIndent : minIndent\n  }, Infinity)\n\n  return lines\n    .map(line => line.slice(minIndent))\n    .join('\\n')\n    .trim()\n    .replace(/\\n +\\n/g, '\\n\\n')\n}\n\n// foo_barBaz -> ['foo', 'bar', 'Baz']\nexport const splitWords = (str) => {\n  return str\n    .replace(/[A-Z]/, ' $&')\n    .split(/[^a-zA-Z0-9]+/)\n}\n\n// upper -> Upper\nexport const toUpperFirst = (str) => {\n  return str.substr(0, 1).toUpperCase() + str.substr(1).toLowerCase()\n}\n\n// foo-bar-baz -> fooBarBaz\nexport const toCamelCase = (str) => {\n  const words = splitWords(str)\n  const first = words.shift().toLowerCase()\n  const rest = words.map(toUpperFirst)\n\n  return [first, ...rest].join('')\n}\n","module.exports = require(\"typescript\");","import fs from 'fs'\n\nexport const readFileSync = fs.readFileSync\nexport const writeFileSync = fs.writeFileSync\n\nexport const readFile = (...args) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(...args, (err, content) => {\n      if (err) {\n        reject(err)\n      }\n      else {\n        resolve(content)\n      }\n    })\n  })\n}\n\nexport const writeFile = (...args) => {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(...args, (err) => {\n      if (err) {\n        reject(err)\n      }\n      else {\n        resolve()\n      }\n    })\n  })\n}\n\nexport default {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync,\n}\n","module.exports = require(\"fs\");","import path from 'path'\n\nexport const resolve = path.resolve\n\nexport const extname = (filePath) => {\n  const partials = filePath.split('.')\n  let ext = '.' + partials.pop()\n\n  if (partials.length > 1 && partials[partials.length - 1] == 'flow') {\n    ext = '.' + partials.pop() + ext\n  }\n\n  return ext\n}\n","module.exports = require(\"path\");","import * as t from '@babel/types'\nimport { freeText } from './utils'\n\nconst defaults = {\n  modules: [\n    {\n      name: 'graphql-tag',\n    },\n    {\n      name: 'graphql-tag.macro',\n    },\n    {\n      name: 'gql',\n      identifier: '@apollo/client',\n    },\n    {\n      name: 'gatsby',\n      identifier: 'graphql',\n    },\n    {\n      name: 'apollo-server-express',\n      identifier: 'gql'\n    },\n    {\n      name: 'apollo-server',\n      identifier: 'gql'\n    },\n    {\n      name: 'react-relay',\n      identifier: 'graphql'\n    },\n    {\n      name: 'apollo-boost',\n      identifier: 'gql'\n    },\n    {\n      name: 'apollo-server-koa',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-hapi',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-fastify',\n      identifier: 'gql',\n    },\n    {\n      name: ' apollo-server-lambda',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-micro',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-azure-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloud-functions',\n      identifier: 'gql',\n    },\n    {\n      name: 'apollo-server-cloudflare',\n      identifier: 'gql',\n    },\n    {\n      name: 'graphql.macro',\n      identifier: 'gql',\n    },\n  ],\n  gqlMagicComment: 'graphql',\n}\n\nexport default (code, out, options = {}) => {\n  // Apply defaults to options\n  let { modules, globalGqlIdentifierName, gqlMagicComment } = {\n    ...defaults,\n    ...options,\n  }\n\n  // Prevent case related potential errors\n  gqlMagicComment = gqlMagicComment.toLowerCase()\n  // normalize `name` and `identifier` values\n  modules = modules.map(mod => {\n    return {\n      name: mod.name,\n      identifier: mod.identifier && mod.identifier.toLowerCase(),\n    }\n  })\n  globalGqlIdentifierName = globalGqlIdentifierName && globalGqlIdentifierName.toLowerCase()\n\n  // Keep imported identifiers\n  // import gql from 'graphql-tag' -> gql\n  // import { graphql } from 'gatsby' -> graphql\n  // Will result with ['gql', 'graphql']\n  const definedIdentifierNames = []\n\n  // Will accumulate all template literals\n  const gqlTemplateLiterals = []\n\n  // Check if package is registered\n  function isValidPackage(name) {\n    return modules.some(pkg => pkg.name && name && pkg.name.toLowerCase() === name.toLowerCase())\n  }\n\n  // Check if identifier is defined and imported from registered packages\n  function isValidIdentifier(name) {\n    return (\n      definedIdentifierNames.some(id => id === name) ||\n      (globalGqlIdentifierName && name === globalGqlIdentifierName)\n    )\n  }\n\n  const pluckStringFromFile = ({ start, end }) => {\n    return freeText(\n      code\n        // Slice quotes\n        .slice(start + 1, end - 1)\n        // Erase string interpolations as we gonna export everything as a single\n        // string anyways\n        .replace(/\\$\\{[^}]*\\}/g, '')\n        .split('\\\\`').join('`')\n    )\n  }\n\n  // Push all template literals leaded by graphql magic comment\n  // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n  const pluckMagicTemplateLiteral = (node, takeExpression) => {\n    const leadingComments = node.leadingComments\n\n    if (!leadingComments) return\n    if (!leadingComments.length) return\n\n    const leadingComment = leadingComments[leadingComments.length - 1]\n    const leadingCommentValue = leadingComment.value.trim().toLowerCase()\n\n    if (leadingCommentValue != gqlMagicComment) return\n\n    const gqlTemplateLiteral = pluckStringFromFile(takeExpression ? node.expression : node)\n\n    if (gqlTemplateLiteral) {\n      gqlTemplateLiterals.push(gqlTemplateLiteral)\n    }\n  }\n\n  return {\n    CallExpression: {\n      enter(path) {\n        // Find the identifier name used from graphql-tag, commonJS\n        // e.g. import gql from 'graphql-tag' -> gql\n        if (path.node.callee.name == 'require' && isValidPackage(path.node.arguments[0].value)) {\n          if (!t.isVariableDeclarator(path.parent)) return\n          if (!t.isIdentifier(path.parent.id)) return\n\n          definedIdentifierNames.push(path.parent.id.name)\n\n          return\n        }\n\n        const arg0 = path.node.arguments[0]\n\n        // Push strings template literals to gql calls\n        // e.g. gql(`query myQuery {}`) -> query myQuery {}\n        if (\n          t.isIdentifier(path.node.callee) &&\n          isValidIdentifier(path.node.callee.name) &&\n          t.isTemplateLiteral(arg0)\n        ) {\n          const gqlTemplateLiteral = pluckStringFromFile(arg0)\n\n          // If the entire template was made out of interpolations it should be an empty\n          // string by now and thus should be ignored\n          if (gqlTemplateLiteral) {\n            gqlTemplateLiterals.push(gqlTemplateLiteral)\n          }\n        }\n      },\n    },\n\n    ImportDeclaration: {\n      enter(path) {\n        // Find the identifier name used from graphql-tag, es6\n        // e.g. import gql from 'graphql-tag' -> gql\n        if (!isValidPackage(path.node.source.value)) return\n\n        const moduleNode = modules.find(pkg => pkg.name.toLowerCase() === path.node.source.value.toLowerCase())\n\n        const gqlImportSpecifier = path.node.specifiers.find(importSpecifier => {\n          // When it's a default import and registered package has no named identifier\n          if (t.isImportDefaultSpecifier(importSpecifier) && !moduleNode.identifier) {\n            return true\n          }\n\n          // When it's a named import that matches registered package's identifier\n          if (\n            t.isImportSpecifier(importSpecifier) &&\n            importSpecifier.imported.name === moduleNode.identifier\n          ) {\n            return true\n          }\n\n          return false\n        })\n\n        if (!gqlImportSpecifier) return\n\n        definedIdentifierNames.push(gqlImportSpecifier.local.name)\n      },\n    },\n\n    ExpressionStatement: {\n      exit(path) {\n        // Push all template literals leaded by graphql magic comment\n        // e.g. /* GraphQL */ `query myQuery {}` -> query myQuery {}\n\n        if (!t.isTemplateLiteral(path.node.expression)) return\n\n        pluckMagicTemplateLiteral(path.node, true)\n      },\n    },\n\n    TemplateLiteral: {\n      exit(path) {\n        pluckMagicTemplateLiteral(path.node)\n      },\n    },\n\n    TaggedTemplateExpression: {\n      exit(path) {\n        // Push all template literals provided to the found identifier name\n        // e.g. gql `query myQuery {}` -> query myQuery {}\n        if (!t.isIdentifier(path.node.tag) || !isValidIdentifier(path.node.tag.name)) {\n          return\n        }\n\n        const gqlTemplateLiteral = pluckStringFromFile(path.node.quasi)\n\n        if (gqlTemplateLiteral) {\n          gqlTemplateLiterals.push(gqlTemplateLiteral)\n        }\n      },\n    },\n\n    exit() {\n      out.returnValue = gqlTemplateLiterals.join('\\n\\n')\n    },\n  }\n}\n","module.exports = require(\"@babel/types\");"],"sourceRoot":""}